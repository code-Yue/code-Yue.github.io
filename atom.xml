<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IT 日志</title>
  
  <subtitle>没有比脚更长的路，走过去，前面是个天！</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-04T09:47:19.961Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Jack</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++操作图像中的像素-Picture类</title>
    <link href="http://example.com/2021/06/04/C-%E6%93%8D%E4%BD%9C%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E5%83%8F%E7%B4%A0/"/>
    <id>http://example.com/2021/06/04/C-%E6%93%8D%E4%BD%9C%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E5%83%8F%E7%B4%A0/</id>
    <published>2021-06-04T09:45:23.670Z</published>
    <updated>2021-06-04T09:47:19.961Z</updated>
    
    <content type="html"><![CDATA[<p>​    数字图像由像素组成，在C++中操作图像即是对图像中的某些或全部像素的操作，下介绍使用picture类型对图片像素进行操作。</p><span id="more"></span><h4 id="如何使用picture类型"><a href="#如何使用picture类型" class="headerlink" title="如何使用picture类型"></a>如何使用picture类型</h4><ol><li><p>将文件picture.cpp、picture.h、lodepng.cpp和lodepng.h复制到用户的源文件所在文件夹（注：文件可在<u>wiley.com./go/bclo3</u>中的配套代码下的ch04/worked_example_2下找到），如下图：</p><img src="/2021/06/04/C-%E6%93%8D%E4%BD%9C%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E5%83%8F%E7%B4%A0/1.png" class></li><li><p>在工作空间中打开它们，具体步骤：右键picture-&gt;添加文件-&gt;同时打开4个文件，然后编译器会弹出信息，点击确定即可，打开之后如下图：</p></li></ol><img src="/2021/06/04/C-%E6%93%8D%E4%BD%9C%E5%9B%BE%E5%83%8F%E4%B8%AD%E7%9A%84%E5%83%8F%E7%B4%A0/2.png" class><ol start="3"><li><p>在头文件中使用如下语句：#include “picture.h”,注：picture.h应由引号而不是尖括号括起来。</p></li><li><p>将要处理的图片复制到源文件所在的文件夹，图片名称为queen注：图片的类型必需为png类型。</p></li><li><p>打开图片，使用如下代码：Picture pic(“queen.png”)。</p><p>​    该语句定义了一个Picture 类型的变量 pic，用于保存图片的像素。</p><p>​    图片中每一个像素都有x和y坐标，其中0&lt;=x&lt;pic.width()(即图片的宽度)，0&lt;=y&lt;pic.height()(即图片的高度);例如(0,0)就位于图片的左上角，且y轴向下。</p><p>​    对于每一个像素都有一个RGB颜色值，该值由三原色组成：红、绿、蓝。每一个原色值都在0~255之间，所以我们操作图片中的像素即通过改变像素的颜色值来达到我们的目的。</p></li></ol><h4 id="Picture类型部分成员函数"><a href="#Picture类型部分成员函数" class="headerlink" title="Picture类型部分成员函数"></a>Picture类型部分成员函数</h4><ol><li><p>pic.width() 和 pic.height() ；</p><p>分别用来访问图片的的宽度和高度。</p></li><li><p>pic.red(x,y)、pic.blue(x,y) 和 pic.green(x,y) ；</p><p>分别用来获取像素(x,y)处红色原色值、蓝色原色值以及绿色原色值。</p></li><li><p>pic.set(x,y,red,green,bule)；</p><p>将像素(x,y)处设定为自定义原色值，其中后3个参数均为0~255之间的数值。</p></li><li><p>Picture pic2(“queen2.png”);</p><p>pic.add(pic2,num1,num2);</p><p>这是在图片pic中添加图片pic2，其中num1，num2 分别为pic2相对于(0,0)这个位置的位移。</p></li><li><p>pic.save(“result.png”)；</p><p>将操作后的图片保存。注：会在源文件中生成一个名为result，类型为png的图片。</p></li><li><p>Picture pic3(num1,num2,num3,num4,num5);</p><p>不从源文件中加载图片，生成一张单色的图片，其中num1,num2 分别指定图片的宽度的高度，num3、num4、num5 分别代表着图片每一个像素的红、绿、蓝原色值。</p></li></ol><h4 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h4><p>编写程序，将图片queen中的每一个像素的个原色值都变成其相反值。</p><h4 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;picture.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Picture <span class="title">pic</span><span class="params">(<span class="string">&quot;queen.png&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;pic.<span class="built_in">height</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;pic.<span class="built_in">width</span>();j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> red=pic.<span class="built_in">red</span>(j,i);</span><br><span class="line">            <span class="keyword">int</span> green = pic.<span class="built_in">green</span>(j,i);</span><br><span class="line">            <span class="keyword">int</span> bule=pic.<span class="built_in">blue</span>(j,i);</span><br><span class="line">            pic.<span class="built_in">set</span>(j,i,<span class="number">255</span>-red,<span class="number">255</span>-green,<span class="number">255</span>-bule);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pic.<span class="built_in">save</span>(<span class="string">&quot;upset_down.png&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;​    数字图像由像素组成，在C++中操作图像即是对图像中的某些或全部像素的操作，下介绍使用picture类型对图片像素进行操作。&lt;/p&gt;</summary>
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
    <category term="C++_picture" scheme="http://example.com/tags/C-picture/"/>
    
  </entry>
  
</feed>
